---
- name: Install and configure Grafana
  hosts: grafana
  become: true
  
  tasks:
    - name: Install required dependencies (Debian)
      ansible.builtin.apt:
        name: apt-transport-https
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install required dependencies (Red Hat)
      ansible.builtin.yum:
        name: yum-utils
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Grafana repository (Debian)
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/grafana.gpg] https://packages.grafana.com/oss/deb stable main"
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Grafana repository (Red Hat)
      ansible.builtin.yum_repository:
        name: grafana
        description: Grafana Repository
        baseurl: https://packages.grafana.com/oss/rpm
        gpgcheck: yes
        gpgkey: https://packages.grafana.com/gpg.key
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: Install Grafana (Debian)
      ansible.builtin.apt:
        name: grafana
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Grafana (Red Hat)
      ansible.builtin.yum:
        name: grafana
        state: present
      when: ansible_os_family == "RedHat"

    - name: Enable and start Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        enabled: yes
        state: started

    - name: Open Firewall for Grafana (Debian - UFW)
      ansible.builtin.ufw:
        rule: allow
        port: "3000"
        proto: tcp
      when: ansible_os_family == "Debian"

    - name: Open Firewall for Grafana (Red Hat - Firewalld)
      ansible.builtin.firewalld:
        service: grafana
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_os_family == "RedHat"

    - name: Ensure provisioning directory exists
      ansible.builtin.file:
        path: /etc/grafana/provisioning/dashboards
        state: directory
        mode: '0755'

    - name: Copy Grafana dashboard template
      ansible.builtin.copy:
        src: "templates/grafana_dashboard.json"
        dest: "/etc/grafana/provisioning/dashboards/custom_dashboard.json"
        mode: '0644'

    - name: Create Grafana dashboard provisioning config
      ansible.builtin.template:
        src: "templates/dashboard_provisioning.yml.j2"
        dest: "/etc/grafana/provisioning/dashboards/dashboard.yml"
        mode: '0644'

    - name: Restart Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        state: restarted

